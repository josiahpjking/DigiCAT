shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?actionBttn()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?toggleState
sim_basicrs <- function(seed=NULL){
if(!is.null(seed)){
set.seed(seed)
}
N = 200
n_groups = 20
g = rep(1:n_groups, e = N/n_groups)      # the group identifier
x = rnorm(N)                             # an observation level continuous variable
sd_g = .4     # standard deviation for the random effect
sigma = .5     # standard deviation for the observation
sd_x = .4
re0 = rnorm(n_groups, sd = sd_g)  # random effects
re  = re0[g]
rex = rnorm(n_groups, sd = sd_x)  # random effects
re_x  = rex[g]
lp = (0 + re) + (-.5 + re_x)*x
y = rnorm(N, mean = lp, sd = sigma)               # create a continuous target variable
y_bin = rbinom(N, size = 1, prob = plogis(lp))    #- create a binary target variable
data.frame(x, y, y_bin, g = factor(g))
}
df <- sim_basicrs()
df$g <- factor(df$g)
library(survey)
survey.design <- svydesign(ids=~g, prob=~1, data=df)
summary(svyglm(y~1+x,design=survey.design))
library(lavaan)
library(lavaan.survey)
initfit <- sem("y~1+x",df)
survey.fit <- lavaan.survey(lavaan.fit=initfit, survey.design=survey.design)
partable(survey.fit)$se[2]
partable(survey.fit)
summary(survey.fit)
as.data.frame(summary(survey.fit))
as.data.frame(print(summary(survey.fit)))
dd=as.data.frame(print(summary(survey.fit)))
dd
capture.output(summary(survey.fit))
as.data.frame(capture.output(summary(survey.fit)))
capture.output(summary(survey.fit))
init_output <- capture.output(summary(survey.fit))
enframe(init_output)
library(tidyverse)
enframe(init_output)
summary(survey.fit
)
summary(survey.fit)
?partable
shiny::runApp()
