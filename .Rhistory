model_formula = as.formula(paste0(outcome_variable,"~",treatment_variable,"*(",paste0(matching_variable, covariates, collapse="+"), ")"))
} else{
model_formula = as.formula(paste0(outcome_variable,"~",treatment_variable,"*(",paste0(matching_variable, collapse="+"), ")"))
}
if(extracted_balanced_data$process == "mi_psm"){
lm_model_fit <- lapply(complete(balanced_data, "all"), function(d) {
lm(model_formula, data = d,
weights = weights)
})
model_fit <- lapply(lm_model_fit, function(fit) {
marginaleffects::avg_comparisons(fit, newdata = subset(fit$data, treatment_variable == 1),
variables = treatment_variable, wts = "weights", vcov = ~subclass)
})
model_fit <- mice::pool(model_fit)
} else if(extracted_balanced_data$process == "cc_psm"){
lm_model_fit = lm(model_formula, data = extracted_balanced_data[[1]], weights = weights)
model_fit = marginaleffects::avg_comparisons(lm_model_fit, variables = treatment_variable,
vcov = ~subclass,
newdata = subset(extracted_balanced_data[[1]],
extracted_balanced_data[[1]][[treatment_variable]] == 1),
wts = "weights")
} else if (extracted_balanced_data$process == "mi_iptw"){
lm_model_fit <- lapply(complete(balanced_data, "all"), function(d) {
lm(model_formula, data = d,
weights = weights)
})
model_fit <- lapply(lm_model_fit, function(fit) {
marginaleffects::avg_comparisons(fit, newdata = subset(fit$data, treatment_variable == 1),
variables = treatment_variable, wts = "weights", vcov = "HC3")
})
model_fit <- mice::pool(model_fit)
}
else if (extracted_balanced_data$process == "cc_iptw"){
model_fit = lm(model_formula, data = extracted_balanced_data[[1]], weights = weights)
model_fit = marginaleffects::avg_comparisons(model_fit, variables = treatment_variable,
vcov = "HC3",
newdata = subset(extracted_balanced_data[[1]],
extracted_balanced_data[[1]][[treatment_variable]] == 1),
wts = "weights")
} else if (extracted_balanced_data$process == "weighting_iptw"){
model_fit = svyglm(model_formula, design = extracted_balanced_data[[1]])
model_fit = marginaleffects::avg_comparisons(model_fit, variables = treatment_variable)
} else if (extracted_balanced_data$process == "weighting_psm"){
model_fit = svyglm(model_formula, design = extracted_balanced_data[[1]])
model_fit = marginaleffects::avg_comparisons(model_fit, variables = treatment_variable)
}
return(model_fit)
}
fit_outcome_model(ghi, ex, outcome_variable = "y", treatment_variable = "t", matching_variable = c("a", "b"), outcome_formula = "with_matching_variables", covariates = "e", missing_method = "mi")
fit_outcome_model(ghi, ex, outcome_variable = "y", treatment_variable = "t", matching_variable = c("a", "b"), outcome_formula = "with_matching_variables", missing_method = "mi")
outcome_marginal_effects <- function(balanced_data,
extracted_balanced_data,
outcome_variable,
treatment_variable,
matching_variable, covariates,
missing_method,...){
if(!is.null(covariates)){
model_formula = as.formula(paste0(outcome_variable,"~",treatment_variable,"*(",paste0(matching_variable, covariates, collapse="+"), ")"))
} else{
model_formula = as.formula(paste0(outcome_variable,"~",treatment_variable,"*(",paste0(matching_variable, collapse="+"), ")"))
}
if(extracted_balanced_data$process == "mi_psm"){
lm_model_fit <- lapply(complete(balanced_data, "all"), function(d) {
lm(model_formula, data = d,
weights = weights)
})
model_fit <- lapply(lm_model_fit, function(fit) {
marginaleffects::avg_comparisons(fit, newdata = subset(fit$data, treatment_variable == 1),
variables = treatment_variable, wts = "weights", vcov = ~subclass)
})
model_fit <- mice::pool(model_fit)
} else if(extracted_balanced_data$process == "cc_psm"){
lm_model_fit = lm(model_formula, data = extracted_balanced_data[[1]], weights = weights)
model_fit = marginaleffects::avg_comparisons(lm_model_fit, variables = treatment_variable,
vcov = ~subclass,
newdata = subset(extracted_balanced_data[[1]],
extracted_balanced_data[[1]][[treatment_variable]] == 1),
wts = "weights")
} else if (extracted_balanced_data$process == "mi_iptw"){
lm_model_fit <- lapply(complete(balanced_data, "all"), function(d) {
lm(model_formula, data = d,
weights = weights)
})
model_fit <- lapply(lm_model_fit, function(fit) {
marginaleffects::avg_comparisons(fit, newdata = subset(fit$data, treatment_variable == 1),
variables = treatment_variable, wts = "weights", vcov = "HC3")
})
model_fit <- mice::pool(model_fit)
}
else if (extracted_balanced_data$process == "cc_iptw"){
model_fit = lm(model_formula, data = extracted_balanced_data[[1]], weights = weights)
model_fit = marginaleffects::avg_comparisons(model_fit, variables = treatment_variable,
vcov = "HC3",
newdata = subset(extracted_balanced_data[[1]],
extracted_balanced_data[[1]][[treatment_variable]] == 1),
wts = "weights")
} else if (extracted_balanced_data$process == "weighting_iptw"){
model_fit = svyglm(model_formula, design = extracted_balanced_data[[1]])
model_fit = marginaleffects::avg_comparisons(model_fit, variables = treatment_variable)
} else if (extracted_balanced_data$process == "weighting_psm"){
model_fit = svyglm(model_formula, design = extracted_balanced_data[[1]])
model_fit = marginaleffects::avg_comparisons(model_fit, variables = treatment_variable)
}
return(model_fit)
}
outcome_marginal_effects(ghi, ex, "y", "t", c("a","b"), "e", "mi")
outcome_marginal_effects(ghi, ex, "y", "t", c("a","b"), "e", "mi")
outcome_marginal_effects(ghi, ex, "y", "t", c("a","b"),covariates= "e", "mi")
outcome_marginalh_effects <- function(balanced_data,
extracted_balanced_data,
outcome_variable,
treatment_variable,
matching_variable, covariates,
missing_method,...){
if(!is.null(covariates)){
model_formula = as.formula(paste0(outcome_variable,"~",treatment_variable,"*(",paste0(matching_variable, covariates, collapse="+"), ")"))
} else{
model_formula = as.formula(paste0(outcome_variable,"~",treatment_variable,"*(",paste0(matching_variable, collapse="+"), ")"))
}
if(extracted_balanced_data$process == "mi_psm"){
lm_model_fit <- lapply(complete(balanced_data, "all"), function(d) {
lm(model_formula, data = d,
weights = weights)
})
print(lm_model_fit)
# model_fit <- lapply(lm_model_fit, function(fit) {
#   marginaleffects::avg_comparisons(fit, newdata = subset(fit$data, treatment_variable == 1),
#                                    variables = treatment_variable, wts = "weights", vcov = ~subclass)
# })
# model_fit <- mice::pool(model_fit)
} else if(extracted_balanced_data$process == "cc_psm"){
lm_model_fit = lm(model_formula, data = extracted_balanced_data[[1]], weights = weights)
model_fit = marginaleffects::avg_comparisons(lm_model_fit, variables = treatment_variable,
vcov = ~subclass,
newdata = subset(extracted_balanced_data[[1]],
extracted_balanced_data[[1]][[treatment_variable]] == 1),
wts = "weights")
} else if (extracted_balanced_data$process == "mi_iptw"){
lm_model_fit <- lapply(complete(balanced_data, "all"), function(d) {
lm(model_formula, data = d,
weights = weights)
})
model_fit <- lapply(lm_model_fit, function(fit) {
marginaleffects::avg_comparisons(fit, newdata = subset(fit$data, treatment_variable == 1),
variables = treatment_variable, wts = "weights", vcov = "HC3")
})
model_fit <- mice::pool(model_fit)
}
else if (extracted_balanced_data$process == "cc_iptw"){
model_fit = lm(model_formula, data = extracted_balanced_data[[1]], weights = weights)
model_fit = marginaleffects::avg_comparisons(model_fit, variables = treatment_variable,
vcov = "HC3",
newdata = subset(extracted_balanced_data[[1]],
extracted_balanced_data[[1]][[treatment_variable]] == 1),
wts = "weights")
} else if (extracted_balanced_data$process == "weighting_iptw"){
model_fit = svyglm(model_formula, design = extracted_balanced_data[[1]])
model_fit = marginaleffects::avg_comparisons(model_fit, variables = treatment_variable)
} else if (extracted_balanced_data$process == "weighting_psm"){
model_fit = svyglm(model_formula, design = extracted_balanced_data[[1]])
model_fit = marginaleffects::avg_comparisons(model_fit, variables = treatment_variable)
}
return(model_fit)
}
outcome_marginal_effects(ghi, ex, "y", "t", c("a","b"),covariates= "e", "mi")
outcome_marginal_effects <- function(balanced_data,
extracted_balanced_data,
outcome_variable,
treatment_variable,
matching_variable, covariates,
missing_method,...){
if(!is.null(covariates)){
model_formula = as.formula(paste0(outcome_variable,"~",treatment_variable,"*(",paste0(matching_variable, covariates, collapse="+"), ")"))
} else{
model_formula = as.formula(paste0(outcome_variable,"~",treatment_variable,"*(",paste0(matching_variable, collapse="+"), ")"))
}
print(model_formula)
if(extracted_balanced_data$process == "mi_psm"){
lm_model_fit <- lapply(complete(balanced_data, "all"), function(d) {
lm(model_formula, data = d,
weights = weights)
})
model_fit <- lapply(lm_model_fit, function(fit) {
marginaleffects::avg_comparisons(fit, newdata = subset(fit$data, treatment_variable == 1),
variables = treatment_variable, wts = "weights", vcov = ~subclass)
})
model_fit <- mice::pool(model_fit)
} else if(extracted_balanced_data$process == "cc_psm"){
lm_model_fit = lm(model_formula, data = extracted_balanced_data[[1]], weights = weights)
model_fit = marginaleffects::avg_comparisons(lm_model_fit, variables = treatment_variable,
vcov = ~subclass,
newdata = subset(extracted_balanced_data[[1]],
extracted_balanced_data[[1]][[treatment_variable]] == 1),
wts = "weights")
} else if (extracted_balanced_data$process == "mi_iptw"){
lm_model_fit <- lapply(complete(balanced_data, "all"), function(d) {
lm(model_formula, data = d,
weights = weights)
})
model_fit <- lapply(lm_model_fit, function(fit) {
marginaleffects::avg_comparisons(fit, newdata = subset(fit$data, treatment_variable == 1),
variables = treatment_variable, wts = "weights", vcov = "HC3")
})
model_fit <- mice::pool(model_fit)
}
else if (extracted_balanced_data$process == "cc_iptw"){
model_fit = lm(model_formula, data = extracted_balanced_data[[1]], weights = weights)
model_fit = marginaleffects::avg_comparisons(model_fit, variables = treatment_variable,
vcov = "HC3",
newdata = subset(extracted_balanced_data[[1]],
extracted_balanced_data[[1]][[treatment_variable]] == 1),
wts = "weights")
} else if (extracted_balanced_data$process == "weighting_iptw"){
model_fit = svyglm(model_formula, design = extracted_balanced_data[[1]])
model_fit = marginaleffects::avg_comparisons(model_fit, variables = treatment_variable)
} else if (extracted_balanced_data$process == "weighting_psm"){
model_fit = svyglm(model_formula, design = extracted_balanced_data[[1]])
model_fit = marginaleffects::avg_comparisons(model_fit, variables = treatment_variable)
}
return(model_fit)
}
outcome_marginal_effects(ghi, ex, "y", "t", c("a","b"),covariates= "e", "mi")
fit_outcome_model(ghi, ex, outcome_variable = "y", treatment_variable = "t", matching_variable = c("a", "b"), outcome_formula = "unadjusted", missing_method = "mi")
fit_outcome_model(ghi, ex, outcome_variable = "y", treatment_variable = "t", matching_variable = c("a", "b"), outcome_formula = "unadjusted", covariates = "e", missing_method = "mi")
model_formula = as.formula(paste0("y","~","t","*(",paste0("m", "c", collapse="+"), ")"))
model_formula
model_formula = as.formula(paste0("y","~","t","*(",paste0("m",collapse="+"), ")"))
model_formula
model_formula = as.formula(paste0("y","~","t","*(",paste0("m",collapse="+"),"+" ")"))
model_formula <- as.formula(paste0("outcome_variable", " ~ ", "treatment_variable", " * (", paste0("interaction(", "treatment_variable", ",", "matching_variable", ")", "+", "interaction(", "treatment_variable", ",", paste("covariates", collapse = "+"), ")", collapse = " + "), ")"))
model_formula
model_formula <- as.formula(paste0("outcome_variable", " ~ ", "treatment_variable", " * (", paste0(interaction(", "treatment_variable", ",", "matching_variable", ")", "+", "interaction(", "treatment_variable", ",", paste("covariates", collapse = "+"), ")", collapse = " + "), ")"))
model_formula <- as.formula(paste0("outcome_variable", " ~ ", "treatment_variable", " * (", "matching_variable", " + ", paste("covariates", collapse = " + "), ")"))
model_formula
outcome_marginal_effects <- function(balanced_data,
extracted_balanced_data,
outcome_variable,
treatment_variable,
matching_variable, covariates,
missing_method,...){
if(!is.null(covariates)){
model_formula <- as.formula(paste0(outcome_variable, " ~ ", treatment_variable, " * (", matching_variable, " + ", paste(covariates, collapse = " + "), ")"))
} else{
model_formula = as.formula(paste0(outcome_variable,"~",treatment_variable,"*(",paste0(matching_variable, collapse="+"), ")"))
}
#print(model_formula)
if(extracted_balanced_data$process == "mi_psm"){
lm_model_fit <- lapply(complete(balanced_data, "all"), function(d) {
lm(model_formula, data = d,
weights = weights)
})
model_fit <- lapply(lm_model_fit, function(fit) {
marginaleffects::avg_comparisons(fit, newdata = subset(fit$data, treatment_variable == 1),
variables = treatment_variable, wts = "weights", vcov = ~subclass)
})
model_fit <- mice::pool(model_fit)
} else if(extracted_balanced_data$process == "cc_psm"){
lm_model_fit = lm(model_formula, data = extracted_balanced_data[[1]], weights = weights)
model_fit = marginaleffects::avg_comparisons(lm_model_fit, variables = treatment_variable,
vcov = ~subclass,
newdata = subset(extracted_balanced_data[[1]],
extracted_balanced_data[[1]][[treatment_variable]] == 1),
wts = "weights")
} else if (extracted_balanced_data$process == "mi_iptw"){
lm_model_fit <- lapply(complete(balanced_data, "all"), function(d) {
lm(model_formula, data = d,
weights = weights)
})
model_fit <- lapply(lm_model_fit, function(fit) {
marginaleffects::avg_comparisons(fit, newdata = subset(fit$data, treatment_variable == 1),
variables = treatment_variable, wts = "weights", vcov = "HC3")
})
model_fit <- mice::pool(model_fit)
}
else if (extracted_balanced_data$process == "cc_iptw"){
model_fit = lm(model_formula, data = extracted_balanced_data[[1]], weights = weights)
model_fit = marginaleffects::avg_comparisons(model_fit, variables = treatment_variable,
vcov = "HC3",
newdata = subset(extracted_balanced_data[[1]],
extracted_balanced_data[[1]][[treatment_variable]] == 1),
wts = "weights")
} else if (extracted_balanced_data$process == "weighting_iptw"){
model_fit = svyglm(model_formula, design = extracted_balanced_data[[1]])
model_fit = marginaleffects::avg_comparisons(model_fit, variables = treatment_variable)
} else if (extracted_balanced_data$process == "weighting_psm"){
model_fit = svyglm(model_formula, design = extracted_balanced_data[[1]])
model_fit = marginaleffects::avg_comparisons(model_fit, variables = treatment_variable)
}
return(model_fit)
}
outcome_marginal_effects(ghi, ex, "y", "t", c("a","b"),covariates= "e", "mi")
outcome_marginal_effects <- function(balanced_data,
extracted_balanced_data,
outcome_variable,
treatment_variable,
matching_variable, covariates,
missing_method,...){
if(!is.null(covariates)){
model_formula <- as.formula(paste0(outcome_variable, " ~ ", treatment_variable, " * (", matching_variable, " + ", paste(covariates, collapse = " + "), ")"))
} else{
model_formula = as.formula(paste0(outcome_variable,"~",treatment_variable,"*(",paste0(matching_variable, collapse="+"), ")"))
}
#print(model_formula)
if(extracted_balanced_data$process == "mi_psm"){
lm_model_fit <- lapply(complete(balanced_data, "all"), function(d) {
lm(model_formula, data = d,
weights = weights)
})
print(lm_model_fit)
# model_fit <- lapply(lm_model_fit, function(fit) {
#   marginaleffects::avg_comparisons(fit, newdata = subset(fit$data, treatment_variable == 1),
#                                    variables = treatment_variable, wts = "weights", vcov = ~subclass)
# })
# model_fit <- mice::pool(model_fit)
} else if(extracted_balanced_data$process == "cc_psm"){
lm_model_fit = lm(model_formula, data = extracted_balanced_data[[1]], weights = weights)
model_fit = marginaleffects::avg_comparisons(lm_model_fit, variables = treatment_variable,
vcov = ~subclass,
newdata = subset(extracted_balanced_data[[1]],
extracted_balanced_data[[1]][[treatment_variable]] == 1),
wts = "weights")
} else if (extracted_balanced_data$process == "mi_iptw"){
lm_model_fit <- lapply(complete(balanced_data, "all"), function(d) {
lm(model_formula, data = d,
weights = weights)
})
model_fit <- lapply(lm_model_fit, function(fit) {
marginaleffects::avg_comparisons(fit, newdata = subset(fit$data, treatment_variable == 1),
variables = treatment_variable, wts = "weights", vcov = "HC3")
})
model_fit <- mice::pool(model_fit)
}
else if (extracted_balanced_data$process == "cc_iptw"){
model_fit = lm(model_formula, data = extracted_balanced_data[[1]], weights = weights)
model_fit = marginaleffects::avg_comparisons(model_fit, variables = treatment_variable,
vcov = "HC3",
newdata = subset(extracted_balanced_data[[1]],
extracted_balanced_data[[1]][[treatment_variable]] == 1),
wts = "weights")
} else if (extracted_balanced_data$process == "weighting_iptw"){
model_fit = svyglm(model_formula, design = extracted_balanced_data[[1]])
model_fit = marginaleffects::avg_comparisons(model_fit, variables = treatment_variable)
} else if (extracted_balanced_data$process == "weighting_psm"){
model_fit = svyglm(model_formula, design = extracted_balanced_data[[1]])
model_fit = marginaleffects::avg_comparisons(model_fit, variables = treatment_variable)
}
return(model_fit)
}
outcome_marginal_effects(ghi, ex, "y", "t", c("a","b"),covariates= "e", "mi")
outcome_marginal_effects(ghi, ex, "y", "t", c("a","b"),covariates= "e", "mi")
c
outcome_marginal_effects <- function(balanced_data,
extracted_balanced_data,
outcome_variable,
treatment_variable,
matching_variable, covariates,
missing_method,...){
if(!is.null(covariates)){
model_formula <- as.formula(paste0(outcome_variable, " ~ ", treatment_variable, " * (", matching_variable, " + ", paste(covariates, collapse = " + "), ")"))
} else{
model_formula = as.formula(paste0(outcome_variable,"~",treatment_variable,"*(",paste0(matching_variable, collapse="+"), ")"))
}
if(extracted_balanced_data$process == "mi_psm"){
lm_model_fit <- lapply(complete(balanced_data, "all"), function(d) {
lm(model_formula, data = d,
weights = weights)
})
print(lm_model_fit)
model_fit <- lapply(lm_model_fit, function(fit) {
marginaleffects::avg_comparisons(fit, newdata = subset(fit$data, treatment_variable == 1),
variables = treatment_variable, wts = "weights", vcov = ~subclass)
})
model_fit <- mice::pool(model_fit)
} else if(extracted_balanced_data$process == "cc_psm"){
lm_model_fit = lm(model_formula, data = extracted_balanced_data[[1]], weights = weights)
model_fit = marginaleffects::avg_comparisons(lm_model_fit, variables = treatment_variable,
vcov = ~subclass,
newdata = subset(extracted_balanced_data[[1]],
extracted_balanced_data[[1]][[treatment_variable]] == 1),
wts = "weights")
} else if (extracted_balanced_data$process == "mi_iptw"){
lm_model_fit <- lapply(complete(balanced_data, "all"), function(d) {
lm(model_formula, data = d,
weights = weights)
})
model_fit <- lapply(lm_model_fit, function(fit) {
marginaleffects::avg_comparisons(fit, newdata = subset(fit$data, treatment_variable == 1),
variables = treatment_variable, wts = "weights", vcov = "HC3")
})
model_fit <- mice::pool(model_fit)
}
else if (extracted_balanced_data$process == "cc_iptw"){
model_fit = lm(model_formula, data = extracted_balanced_data[[1]], weights = weights)
model_fit = marginaleffects::avg_comparisons(model_fit, variables = treatment_variable,
vcov = "HC3",
newdata = subset(extracted_balanced_data[[1]],
extracted_balanced_data[[1]][[treatment_variable]] == 1),
wts = "weights")
} else if (extracted_balanced_data$process == "weighting_iptw"){
model_fit = svyglm(model_formula, design = extracted_balanced_data[[1]])
model_fit = marginaleffects::avg_comparisons(model_fit, variables = treatment_variable)
} else if (extracted_balanced_data$process == "weighting_psm"){
model_fit = svyglm(model_formula, design = extracted_balanced_data[[1]])
model_fit = marginaleffects::avg_comparisons(model_fit, variables = treatment_variable)
}
return(model_fit)
}
outcome_marginal_effects(ghi, ex, "y", "t", c("a","b"),covariates= "e", "mi")
fit_outcome_model(ghi, ex, outcome_variable = "y", treatment_variable = "t", matching_variable = c("a", "b"), outcome_formula = "unadjusted", covariates = "e", missing_method = "mi")
fit_outcome_model(ghi, ex, outcome_variable = "y", treatment_variable = "t", matching_variable = c("a", "b"), outcome_formula = "marginal_effects", covariates = "e", missing_method = "mi")
fit_outcome_model(ghi, ex, outcome_variable = "y", treatment_variable = "t", matching_variable = c("a", "b"), outcome_formula = "marginal_effects", missing_method = "mi")
fit_outcome_model(ghi, ex, outcome_variable = "y", treatment_variable = "t", matching_variable = c("a", "b"), outcome_formula = "unadjusted", missing_method = "mi")
library(DigiCAT)
run_DigiCAT()
library(DigiCAT)
run_DigiCAT()
library(DigiCAT)
run_DigiCAT()
run_DigiCAT()
library(DigiCAT)
run_DigiCAT()
library(DigiCAT)
run_DigiCAT()
run_DigiCAT()
library(DigiCAT)
run_DigiCAT()
run_DigiCAT()
library(DigiCAT)
run_DigiCAT()
run_DigiCAT()
library(DigiCAT)
run_DigiCAT()
library(DigiCAT)
run_DigiCAT()
library(DigiCAT)
library(DigiCAT)
run_DigiCAT()
run_DigiCAT()
run_DigiCAT()
run_DigiCAT()
run_DigiCAT()
run_DigiCAT()
library(DigiCAT)
run_DigiCAT()
run_DigiCAT()
library(DigiCAT)
run_DigiCAT()
run_DigiCAT()
library(DigiCAT)
run_DigiCAT()
library(DigiCAT)
run_DigiCAT()
run_DigiCAT()
run_DigiCAT()
run_DigiCAT()
library(DigiCAT)
run_DigiCAT()
run_DigiCAT()
run_DigiCAT()
run_DigiCAT()
library(DigiCAT)
run_DigiCAT()
library(DigiCAT)
run_DigiCAT()
library(DigiCAT)
run_DigiCAT()
run_DigiCAT()
run_DigiCAT()
run_DigiCAT()
library(DigiCAT)
run_DigiCAT()
run_DigiCAT()
run_DigiCAT()
run_DigiCAT()
shiny::isTruthy(NULL)
shiny::isTruthy(NULL)
shiny::isTruthy(afsd)
CF_approach_values$model_choice
CF_approach_values$model_choice <- NULL
run_DigiCAT()
library(DigiCAT)
run_DigiCAT()
library(DigiCAT)
run_DigiCAT()
run_DigiCAT()
run_DigiCAT()
library(DigiCAT)
run_DigiCAT()
library(DigiCAT)
run_DigiCAT()
library(DigiCAT)
run_DigiCAT()
run_DigiCAT()
library(DigiCAT)
run_DigiCAT()
isTruthy(fdsa)
library(DigiCAT)
run_DigiCAT()
run_DigiCAT()
library(DigiCAT)
run_DigiCAT()
library(DigiCAT)
run_DigiCAT()
library(DigiCAT)
run_DigiCAT()
run_DigiCAT()
library(DigiCAT)
run_DigiCAT()
devtools::document()
devtools::document()
library(DigiCAT)
run_DigiCAT()
