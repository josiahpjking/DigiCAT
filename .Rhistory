newdataout <- mcs[myvars]
rm(mcs)
rm(blank_lvl)
rm(myvars)
#
# Design variables
design_vars <- c("GOVWT2", "PPTYPE2", "NH2", "SPTN00")
# Create a survey design object
svy_design <- svydesign(ids = ~SPTN00, strata = ~PPTYPE2, weights = ~GOVWT2, data = newdataout)
# Create a survey design object
svy_design <- svydesign(ids = ~SPTN00, strata = ~PTTYPE2, weights = ~GOVWT2, data = newdataout)
# Extract the design matrix for prediction
pred_design_matrix <- mice::as.matrix.mids(imputations)[, design_vars, drop = FALSE]
#
design_vars <- c("GOVWT2", "PPTYPE2", "NH2", "SPTN00")
# Create a survey design object
svy_design <- svydesign(ids = ~SPTN00, strata = ~PPTYPE2, weights = ~GOVWT2, data = newdataout)
# Create a survey design object
svy_design <- svydesign(ids = ~SPTN00, strata = ~PTTYPE2, weights = ~GOVWT2, data = newdataout)
# Create a predictor matrix
predmatrix <- matrix(nrow = dim(newdataout)[2], ncol = dim(newdataout)[2], data = rep(1, dim(newdataout)[2] * dim(newdataout)[2]))
# Set elements to 0 for variables that are not used in the imputation model
predmatrix[c(4, 5, 6, 49, 50, 51, 52), ] <- 0
predmatrix[, c(4, 5, 6, 49, 50, 51, 52)] <- 0
# Set elements to 0 for design variables in the imputation model
predmatrix[, design_vars] <- 0
# Create a predictor matrix as a data frame with column names
predmatrix <- as.data.frame(matrix(1, nrow = dim(newdataout)[2], ncol = dim(newdataout)[2]))
# Set column names for the predictor matrix
colnames(predmatrix) <- names(newdataout)
# Set elements to 0 for variables that are not used in the imputation model
predmatrix[c(4, 5, 6, 49, 50, 51, 52), ] <- 0
predmatrix[, c(4, 5, 6, 49, 50, 51, 52)] <- 0
# Set elements to 0 for design variables in the imputation model
predmatrix[, design_vars] <- 0
predmatrix[design_vars, ] <- 0
# Set diagonal elements to 0
diag(predmatrix) <- 0
View(predmatrix)
# Conduct multiple imputation
imputations <- mice::mice(data = newdataout,
m = 10,
maxit = 25,
predictorMatrix = predmatrix,
method = "rf",
design = svy_design)
predmatrix <- as.matrix(predmatrix)
# Conduct multiple imputation
imputations <- mice::mice(data = newdataout,
m = 10,
maxit = 25,
predictorMatrix = predmatrix,
method = "rf",
design = svy_design)
str(predmatrix)
# Create a predictor matrix as a data frame with column names
predmatrix <- as.data.frame(matrix(1, nrow = ncol(newdataout), ncol = ncol(newdataout)))
# Set column names for the predictor matrix
colnames(predmatrix) <- names(newdataout)
# Set elements to 0 for variables that are not used in the imputation model
predmatrix[c(4, 5, 6, 49, 50, 51, 52), ] <- 0
predmatrix[, c(4, 5, 6, 49, 50, 51, 52)] <- 0
# Set elements to 0 for design variables in the imputation model
predmatrix[, design_vars] <- 0
predmatrix[design_vars, ] <- 0
# Set diagonal elements to 0
diag(predmatrix) <- 0
predmatrix <- as.matrix(predmatrix)
# Conduct multiple imputation
imputations <- mice::mice(data = newdataout,
m = 10,
maxit = 25,
predictorMatrix = predmatrix,
method = "rf",
design = svy_design)
#
design_vars <- c("GOVWT2", "PPTYPE2", "NH2", "SPTN00")
# Create a survey design object
svy_design <- svydesign(ids = ~SPTN00, strata = ~PTTYPE2, weights = ~GOVWT2, data = newdataout)
# Create a predictor matrix as a data frame with column names
predmatrix<-matrix(nrow=dim(newdataout)[2], ncol=dim(newdataout)[2], data=rep(1,dim(newdataout)[2]*dim(newdataout)[2]))
# Set column names for the predictor matrix
colnames(predmatrix) <- names(newdataout)
# Set elements to 0 for variables that are not used in the imputation model
predmatrix[c(4, 5, 6, 49, 50, 51, 52), ] <- 0
predmatrix[, c(4, 5, 6, 49, 50, 51, 52)] <- 0
# Set elements to 0 for design variables in the imputation model
predmatrix[, design_vars] <- 0
#
# Create a survey design object
svy_design <- svydesign(ids = ~SPTN00, strata = ~PTTYPE2, weights = ~GOVWT2, data = newdataout)
# Create a predictor matrix as a data frame with column names
predmatrix<-matrix(nrow=dim(newdataout)[2], ncol=dim(newdataout)[2], data=rep(1,dim(newdataout)[2]*dim(newdataout)[2]))
# Set column names for the predictor matrix
colnames(predmatrix) <- names(newdataout)
#
# Create a survey design object
svy_design <- svydesign(ids = ~SPTN00, strata = ~PTTYPE2, weights = ~GOVWT2, data = newdataout)
# Create a predictor matrix as a data frame with column names
predmatrix<-matrix(nrow=dim(newdataout)[2], ncol=dim(newdataout)[2], data=rep(1,dim(newdataout)[2]*dim(newdataout)[2]))
# Set elements to 0 for variables that are not used in the imputation model
predmatrix[c(4, 5, 6, 49, 50, 51, 52), ] <- 0
predmatrix[, c(4, 5, 6, 49, 50, 51, 52)] <- 0
# Set diagonal elements to 0
diag(predmatrix) <- 0
# Conduct multiple imputation
imputations <- mice::mice(data = newdataout,
m = 10,
maxit = 25,
predictorMatrix = predmatrix,
method = "rf",
design = svy_design)
plot(imputations)
# Install and load the dagitty package
install.packages("dagitty")
library(dagitty)
# Create a DAG
dag <- dagitty("dag {
A -> B
B -> C
C -> D
}")
# Plot the DAG
plot(dag)
dag <- dagitty("dag {
A -> B
A -> C
B -> D
C -> D
}")
# Plot the DAG
plot(dag)
dag <- dagitty("dag {
A -> B
B -> C
}")
# Plot the DAG
plot(dag)
dag <- dagitty("dag {
A -> B
C -> A
C -> B
}")
# Plot the DAG
plot(dag)
imputations_with_score <- lapply(1:5, function(i) {
imputed_data_i <- complete(imputations, action = i)
# Convert the self-esteem subscores to numeric
imputed_data_i$ECQ11A00 <- as.numeric(imputed_data_i$ECQ11A00)[imputed_data_i$ECQ11A00]
imputed_data_i$ECQ11B00 <- as.numeric(imputed_data_i$ECQ11B00)[imputed_data_i$ECQ11B00]
imputed_data_i$ECQ11C00 <- as.numeric(imputed_data_i$ECQ11C00)[imputed_data_i$ECQ11C00]
imputed_data_i$ECQ11D00 <- as.numeric(imputed_data_i$ECQ11D00)[imputed_data_i$ECQ11D00]
imputed_data_i$ECQ11E00 <- as.numeric(imputed_data_i$ECQ11E00)[imputed_data_i$ECQ11E00]
# Create the self_esteem variable
imputed_data_i$self_esteem <- rowSums(imputed_data_i[, c("ECQ11A00", "ECQ11B00", "ECQ11C00", "ECQ11D00", "ECQ11E00")], na.rm = TRUE)
return(imputed_data_i)
})
outcome <- "w6_read"
covs <- c("gender", "child_ethnicity", "EQ1414", "EPNTCO00", "EOECDUK0", "deprivation",
"EDNVQ00", "EACAQ00", "EPRDPL00", "EPBKHM00", "EPSEHO00", "EPTVHO00",
"EPQTRM00","EPINEV00", "EPBROW00","EPADHD00", "EPCGHE00", "EQ11",
"EPLOIL00", "ECQ37X00", "ECQ38X00", "ECQ39X00", "EPHWKM00", "ECQ46A00",
"ECQ35X00", "ECQ36X00", "EPPHDE00", "EPPHHO00", "EPPHNE00", "EEMOTI_T",
"ECOND_T", "EHYPER_T", "EPEER_T", "EPROSO_T", "EDEMOT00_cd", "EDCOND00_cd",
"EDPEER00_cd", "EDPROS00_cd", "EDHYPE00_cd", "EVSTSCO", "self_esteem")
f <- as.formula(
paste(outcome,
paste(covs, collapse = "+"),
sep = "~"))
outcome_polly <- "FCRJOY00"
f2 <- as.formula(
paste(outcome_polly,
paste(covs, collapse = "+"),
sep = "~"))
glm_matched <- lapply(imputations_with_score, function(x) matchit(f, data = x,
distance = "glm",
method = "nearest",
s.weights = "GOVWT2"))
View(glm_matched)
auc_values <- lapply(glm_matched, calculate_auc)
numeric_auc_values <- as.numeric(auc_values)
pooled_auc <- weighted.mean(numeric_auc_values, weights = rep(1, length(numeric_auc_values)))
pooled_auc
?mice
View(imputations)
gc()
gc()
file_path_mbrn <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/PDB1195_EPYC_data_Versjon10/Data/PDB1195_MBRN_520_v10.sav"
data_mbrn <- read_sav(file = file_path_mbrn)
file_path_q1 <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/PDB1195_EPYC_data_Versjon10/Data/PDB1195_Q1_v10.sav"
data_q1 <- read_sav(file = file_path_q1)
file_path_q2_calc <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/PDB1195_EPYC_data_Versjon10/Data/PDB1195_Q2_calculation_CDW_v10.sav"
data_q2_calc <- read_sav(file = file_path_q2_calc)
file_path_q2 <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/PDB1195_EPYC_data_Versjon10/Data/PDB1195_Q2CDW_v10.sav"
data_q2 <- read_sav(file = file_path_q2)
file_path_q3 <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/PDB1195_EPYC_data_Versjon10/Data/PDB1195_Q3_v10.sav"
data_q3 <- read_sav(file = file_path_q3)
file_path_q4_6month <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/PDB1195_EPYC_data_Versjon10/Data/PDB1195_Q4_6months_v10.sav"
data_q4_6month <- read_sav(file = file_path_q4_6month)
file_path_q5_18month <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/PDB1195_EPYC_data_Versjon10/Data/PDB1195_Q5_18months_v10.sav"
data_q5_18month <- read_sav(file = file_path_q5_18month)
file_path_q5yrs <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/PDB1195_EPYC_data_Versjon10/Data/PDB1195_Q5yrs_v10.sav"
data_q5yrs <- read_sav(file = file_path_q5yrs)
file_path_q6_3yrs <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/PDB1195_EPYC_data_Versjon10/Data/PDB1195_Q6_3yrs_v10.sav"
data_q6_3yrs <- read_sav(file = file_path_q6_3yrs)
file_path_q7yrs <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/PDB1195_EPYC_data_Versjon10/Data/PDB1195_Q7yrs_v10.sav"
data_q7yrs <- read_sav(file = file_path_q7yrs)
file_path_q8yrs <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/PDB1195_EPYC_data_Versjon10/Data/PDB1195_Q8yrs_v10.sav"
data_q8yrs <- read_sav(file = file_path_q8yrs)
file_path_qf <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/PDB1195_EPYC_data_Versjon10/Data/PDB1195_QF_v10.sav"
data_qf <- read_sav(file = file_path_qf)
file_path_qsv_info <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/PDB1195_EPYC_data_Versjon10/Data/PDB1195_QSV_INFO_v10.sav"
data_qsv_info <- read_sav(file = file_path_qsv_info)
file_path_status <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/PDB1195_EPYC_data_Versjon10/Data/PDB1195_status_v10.sav"
data_status <- read_sav(file = file_path_status)
View(data_status)
all1 <- inner_join(data_q1, data_q2_calc, by = "PREG_ID_1195") %>%
inner_join(., data_q3, by = "PREG_ID_1195") %>%
inner_join(., data_qf, by = "PREG_ID_1195")
gc()
file_path_epyc <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/EPYC_CaseList_2020-10-16.xlsx"
library(readxl)
data_epyc <- read_excel(file_path_epyc)
file_path_epyc <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/EPYC_CaseList_2020-10-16"
data_epyc <- read_excel(file_path_epyc)
file_path_epyc <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/EPYC_CaseList_2020-10-06.xlsx"
data_epyc <- read_excel(file_path_epyc)
# Merge q4_6months, q5_18months, q6_3yrs, q5yrs, q7yrs, q8yrs, epyc, and mbrn datasets
all2 <- inner_join(data_q4_6month, data_q5_18month, by = c("PREG_ID_1195", "BARN_NR")) %>%
inner_join(., data_q6_3yrs, by = c("PREG_ID_1195", "BARN_NR")) %>%
inner_join(., data_q5yrs, by = c("PREG_ID_1195", "BARN_NR")) %>%
inner_join(., data_q7yrs, by = c("PREG_ID_1195", "BARN_NR")) %>%
inner_join(., data_q8yrs, by = c("PREG_ID_1195", "BARN_NR")) %>%
inner_join(., data_epyc, by = c("PREG_ID_1195", "BARN_NR")) %>%
inner_join(., data_mbrn, by = c("PREG_ID_1195", "BARN_NR", "PARITET_5"))
names(data_mbrn)
names(data_epyc)
names(data_q6_3yrs)
names(data_q7yrs)
all2 <- inner_join(data_q4_6month, data_q5_18month, by = c("PREG_ID_1195", "BARN_NR")) %>%
inner_join(., data_q6_3yrs, by = c("PREG_ID_1195", "BARN_NR")) %>%
inner_join(., data_q5yrs, by = c("PREG_ID_1195", "BARN_NR")) %>%
inner_join(., data_q7yrs, by = c("PREG_ID_1195", "BARN_NR")) %>%
inner_join(., data_q8yrs, by = c("PREG_ID_1195", "BARN_NR")) %>%
inner_join(., data_epyc, by = c("PREG_ID_1195", "BARN_NR")) %>%
inner_join(., data_mbrn, by = c("PREG_ID_1195", "BARN_NR"))
names(all2)
all2 <- inner_join(data_q4_6month, data_q5_18month, by = c("PREG_ID_1195", "BARN_NR")) %>%
inner_join(., data_q6_3yrs, by = c("PREG_ID_1195", "BARN_NR")) %>%
inner_join(., data_q5yrs, by = c("PREG_ID_1195", "BARN_NR")) %>%
inner_join(., data_q7yrs, by = c("PREG_ID_1195", "BARN_NR")) %>%
inner_join(., data_q8yrs, by = c("PREG_ID_1195", "BARN_NR")) %>%
inner_join(., data_epyc, by = c("PREG_ID_1195", "BARN_NR")) %>%
inner_join(., data_mbrn, by = c("PREG_ID_1195", "BARN_NR", "PARITET_5"))
all_temp <- inner_join(data_q4_6month, data_q5_18month, by = c("PREG_ID_1195", "BARN_NR")) %>%
inner_join(., data_q6_3yrs, by = c("PREG_ID_1195", "BARN_NR")) %>%
inner_join(., data_q5yrs, by = c("PREG_ID_1195", "BARN_NR")) %>%
inner_join(., data_q7yrs, by = c("PREG_ID_1195", "BARN_NR")) %>%
inner_join(., data_q8yrs, by = c("PREG_ID_1195", "BARN_NR")) %>%
inner_join(., data_epyc, by = c("PREG_ID_1195", "BARN_NR"))
all2 <- inner_join(all_temp, data_mbrn, by = c("PREG_ID_1195", "BARN_NR"))
names(all2)
variables_to_check <- c("PARITET_5")
for (variable in variables_to_check) {
if (variable %in% names(data_mbrn)) {
cat(variable, "is present in data_mbrn\n")
} else {
cat(variable, "is not present in data_mbrn\n")
}
}
for (variable in variables_to_check) {
if (variable %in% names(data_epyc)) {
cat(variable, "is present in data_mbrn\n")
} else {
cat(variable, "is not present in data_mbrn\n")
}
}
for (variable in variables_to_check) {
if (variable %in% names(data_epyc)) {
cat(variable, "is present\n")
} else {
cat(variable, "is not present\n")
}
}
for (variable in variables_to_check) {
if (variable %in% names(data_q4_6month)) {
cat(variable, "is present\n")
} else {
cat(variable, "is not present\n")
}
}
for (variable in variables_to_check) {
if (variable %in% names(data_q6_3yrs)) {
cat(variable, "is present\n")
} else {
cat(variable, "is not present\n")
}
}
if (variable %in% names(all2)) {
cat(variable, "is present\n")
} else {
cat(variable, "is not present\n")
}
gc()
data_all <- merge(all1, all2, by = "PREG_ID_1195")
all_mother <- merge(all, data_qsv_info, by = "PREG_ID_1195", all.x = TRUE)
R --max-ppsize=5000M
all_mother <- merge(all, data_qsv_info, by = "PREG_ID_1195", all.x = TRUE)
gc()
rm(file_path_qf)
rm(file_path_q1)
rm(file_path_q2)
rm(file_path_epyc)
rm(file_path_mbrn)
rm(file_path_q2_calc)
rm(file_path_q3)
rm(file_path_q4_6month)
rm(file_path_q5_18month)
rm(file_path_q5yrs)
rm(file_path_q6_3yrs)
rm(file_path_q7yrs)
rm(file_path_q8yrs)
rm(file_path_qsv_info)
rm(file_path_status)
View(data_qsv_info)
all_mother <- merge(all, data_qsv_info, by = "PREG_ID_1195", all.x = TRUE)
rm(all_temp)
rm(data_q5_18month)
rm(data_q1)
rm(data_q2)
rm(data_q3)
rm(data_q4_6month)
rm(data_q5yrs)
rm(data_q6_3yrs)
rm(data_q7yrs)
rm(data_q8yrs)
rm(data_q2_calc)
all_mother <- merge(all, data_qsv_info, by = "PREG_ID_1195", all.x = TRUE)
file_path_mbrn <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/PDB1195_EPYC_data_Versjon10/Data/PDB1195_MBRN_520_v10.sav"
data_mbrn <- read_sav(file = file_path_mbrn)
file_path_q1 <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/PDB1195_EPYC_data_Versjon10/Data/PDB1195_Q1_v10.sav"
data_q1 <- read_sav(file = file_path_q1)
file_path_q2_calc <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/PDB1195_EPYC_data_Versjon10/Data/PDB1195_Q2_calculation_CDW_v10.sav"
data_q2_calc <- read_sav(file = file_path_q2_calc)
file_path_q2 <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/PDB1195_EPYC_data_Versjon10/Data/PDB1195_Q2CDW_v10.sav"
data_q2 <- read_sav(file = file_path_q2)
file_path_q3 <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/PDB1195_EPYC_data_Versjon10/Data/PDB1195_Q3_v10.sav"
data_q3 <- read_sav(file = file_path_q3)
file_path_q4_6month <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/PDB1195_EPYC_data_Versjon10/Data/PDB1195_Q4_6months_v10.sav"
data_q4_6month <- read_sav(file = file_path_q4_6month)
file_path_q5_18month <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/PDB1195_EPYC_data_Versjon10/Data/PDB1195_Q5_18months_v10.sav"
data_q5_18month <- read_sav(file = file_path_q5_18month)
file_path_q5yrs <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/PDB1195_EPYC_data_Versjon10/Data/PDB1195_Q5yrs_v10.sav"
data_q5yrs <- read_sav(file = file_path_q5yrs)
file_path_q6_3yrs <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/PDB1195_EPYC_data_Versjon10/Data/PDB1195_Q6_3yrs_v10.sav"
data_q6_3yrs <- read_sav(file = file_path_q6_3yrs)
file_path_q7yrs <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/PDB1195_EPYC_data_Versjon10/Data/PDB1195_Q7yrs_v10.sav"
data_q7yrs <- read_sav(file = file_path_q7yrs)
file_path_q8yrs <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/PDB1195_EPYC_data_Versjon10/Data/PDB1195_Q8yrs_v10.sav"
data_q8yrs <- read_sav(file = file_path_q8yrs)
file_path_qf <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/PDB1195_EPYC_data_Versjon10/Data/PDB1195_QF_v10.sav"
data_qf <- read_sav(file = file_path_qf)
file_path_qsv_info <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/PDB1195_EPYC_data_Versjon10/Data/PDB1195_QSV_INFO_v10.sav"
data_qsv_info <- read_sav(file = file_path_qsv_info)
file_path_status <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/PDB1195_EPYC_data_Versjon10/Data/PDB1195_status_v10.sav"
data_status <- read_sav(file = file_path_status)
file_path_epyc <- "U:/Datastore/CMVM/mvmsan/collegeoffice/ECT Unit/ECTU Current Trials/1 CURRENT PROJECTS/ChildEpilepsyNorway/Analysis/Data Downloads Feb2020/EPYC_CaseList_2020-10-06.xlsx"
data_epyc <- read_excel(file_path_epyc)
# Questionnaire Indicators for completion
data_q1 <- mutate(data_q1, q1 = 1)
View(data_q1)
data_q2_calc <- mutate(data_q2_calc, q2 = 1)
data_q3 <- mutate(data_q3, q3 = 1)
data_q4_6months <- mutate(data_q4_6month, q4 = 1)
data_q5_18months <- mutate(data_q5_18month, q5 = 1)
data_q6_3yrs <- mutate(data_q6_3yrs, q6 = 1)
data_q5yrs <- mutate(data_q5yrs, q5yrs = 1)
data_q7yrs <- mutate(data_q7yrs, q7yrs = 1)
data_q8yrs <- mutate(data_q8yrs, q8yrs = 1)
data_qf <- mutate(data_qf, qf = 1)
# Indicator for in EPYC
data_epyc <- mutate(data_epyc, in_epyc = 1)
# Indicator for in MBRN
data_mbrn <- mutate(data_mbrn, in_mbrn = 1)
all1 <- inner_join(data_q1, data_q2_calc, by = "PREG_ID_1195") %>%
inner_join(., data_q3, by = "PREG_ID_1195") %>%
inner_join(., data_qf, by = "PREG_ID_1195")
all_temp <- inner_join(data_q4_6month, data_q5_18month, by = c("PREG_ID_1195", "BARN_NR")) %>%
inner_join(., data_q6_3yrs, by = c("PREG_ID_1195", "BARN_NR")) %>%
inner_join(., data_q5yrs, by = c("PREG_ID_1195", "BARN_NR")) %>%
inner_join(., data_q7yrs, by = c("PREG_ID_1195", "BARN_NR")) %>%
inner_join(., data_q8yrs, by = c("PREG_ID_1195", "BARN_NR")) %>%
inner_join(., data_epyc, by = c("PREG_ID_1195", "BARN_NR"))
all2 <- inner_join(all_temp, data_mbrn, by = c("PREG_ID_1195", "BARN_NR"))
data_all <- merge(all1, all2, by = "PREG_ID_1195")
all_mother <- merge(all, data_qsv_info, by = "PREG_ID_1195", all.x = TRUE)
all_mother <- merge(all, data_qsv_info, by = "PREG_ID_1195")
all_mother <- merge(data_all, data_qsv_info, by = "PREG_ID_1195", all.x = TRUE)
View(all_mother)
# Perform frequency analysis
freq_table1 <- freq(all_mother$in_epyc, missing.include = TRUE)
library(summarytools)
install.packages("summarytools")
library(summarytools)
# Perform frequency analysis
freq_table1 <- freq(all_mother$in_epyc, missing.include = TRUE)
freq_table1
freq_table2 <- freq(all_mother$in_mbrn, missing.include = TRUE)
freq_table3 <- freq(all_mother$BARN_NR, missing.include = TRUE)
View(freq_table2)
View(freq_table3)
all2 <- left_join(data_q4_6month, data_q5_18month, by = c("PREG_ID_1195", "BARN_NR")) %>%
left_join(., data_q6_3yrs, by = c("PREG_ID_1195", "BARN_NR")) %>%
left_join(., data_q5yrs, by = c("PREG_ID_1195", "BARN_NR")) %>%
left_join(., data_q7yrs, by = c("PREG_ID_1195", "BARN_NR")) %>%
left_join(., data_q8yrs, by = c("PREG_ID_1195", "BARN_NR")) %>%
left_join(., data_epyc, by = c("PREG_ID_1195", "BARN_NR")) %>%
left_join(., data_mbrn, by = c("PREG_ID_1195", "BARN_NR", "PARITET_5"))
all2 <- left_join(data_q4_6month, data_q5_18month, by = c("PREG_ID_1195", "BARN_NR")) %>%
left_join(., data_q6_3yrs, by = c("PREG_ID_1195", "BARN_NR")) %>%
left_join(., data_q5yrs, by = c("PREG_ID_1195", "BARN_NR")) %>%
left_join(., data_q7yrs, by = c("PREG_ID_1195", "BARN_NR")) %>%
left_join(., data_q8yrs, by = c("PREG_ID_1195", "BARN_NR")) %>%
left_join(., data_epyc, by = c("PREG_ID_1195", "BARN_NR"))
gc()
all2 <- left_join(all2, data_mbrn, by = c("PREG_ID_1195", "BARN_NR"))
data_all <- merge(all1, all2, by = "PREG_ID_1195")
all_mother <- merge(data_all, data_qsv_info, by = "PREG_ID_1195", all.x = TRUE)
gc()
# Perform frequency analysis
freq_table1 <- freq(all_mother$in_epyc, missing.include = TRUE)
freq_table2 <- freq(all_mother$in_mbrn, missing.include = TRUE)
freq_table3 <- freq(all_mother$BARN_NR, missing.include = TRUE)
freq_table1
freq_table2 <- freq(all_mother$in_mbrn, missing.include = TRUE)
freq_table2
freq_table3
# Perform frequency analysis
freq_table1 <- freq(all_mother$in_epyc, missing.include = F)
freq_table1
freq_table2 <- freq(all_mother$in_mbrn, missing.include = F)
freq_table3 <- freq(all_mother$BARN_NR, missing.include = F)
freq_table2
freq_table3
all_mother <- all_mother %>% filter(!is.na(BARN_NR))
sum(is.na(all_mother))
sum(is.na(all_mother$BARN_NR))
names(all_mother)
names(my_data)[grep("^Q", names(my_data))]
names(all_mother)[grep("^Q", names(all_mother))]
all_mother <- all_mother %>%
mutate(questsum = rowSums(select(., starts_with("Q")), na.rm = TRUE),
in_quest = ifelse(questsum != Inf, 1, 0))
all_mother$questsum
all_mother$in_quest
sum(is.na(all_mother$q1))
sum(is.na(all_mother$q2))
sum(is.na(all_mother$q3))
sum(is.na(all_mother$q6))
sum(is.na(all_mother$q4))
sum(is.na(all_mother$qf))
sum(is.na(all_mother$q5yrs))
sum(is.na(all_mother$q7yrs))
sum(is.na(all_mother$q8yrs))
all_mother %>%
summarise(
in_quest = sum(questsum, na.rm = TRUE) > 0,
q1_missing = sum(is.na(q1)),
in_quest_in_epyc_missing = sum(is.na(in_quest) & is.na(in_epyc)),
q1_in_epyc_missing = sum(is.na(q1) & is.na(in_epyc)),
barn_NR_in_epyc_missing = sum(is.na(barn_NR) & is.na(in_epyc))
)
all_mother %>%
summarise(
in_quest = sum(questsum, na.rm = TRUE) > 0,
q1_missing = sum(is.na(q1)),
in_quest_in_epyc_missing = sum(is.na(in_quest) & is.na(in_epyc)),
q1_in_epyc_missing = sum(is.na(q1) & is.na(in_epyc)),
barn_NR_in_epyc_missing = sum(is.na(BARN_NR) & is.na(in_epyc))
)
pregnancies <- all_mother %>%
group_by(M_ID_1195, PREG_ID_1195) %>%
summarise(
single_multiple = max(BARN_NR, na.rm = TRUE),
in_epyc = max(in_epyc, na.rm = TRUE),
PARITET_5 = max(PARITET_5, na.rm = TRUE)
)
pregnancies
summary(all_mother$in_epyc)
freq_table1
all_mother <- all_mother %>% drop_na(BARN_NR)
all_mother <- all_mother %>% tidyverse::drop_na(BARN_NR)
# create in_quest column
all_mother <- all_mother %>% rowwise() %>% mutate(quest_sum1 = sum(c(q1, q2, q3, q4, q5, q5yrs, q6, q7, q8, qf)))
all_mother <- all_mother %>%
mutate(questsum = rowSums(select(., starts_with("q")), na.rm = TRUE),
in_quest = ifelse(questsum != Inf, 1, 0))
all_mother$questsum
all_mother <- all_mother %>%
mutate(questsum = rowSums(select(., starts_with("q")), na.rm = TRUE),
in_quest = ifelse(questsum != Inf, 1, 0))
all_mother <- merge(data_all, data_qsv_info, by = "PREG_ID_1195", all.x = TRUE)
all_mother <- all_mother %>% filter(!is.na(BARN_NR))
all_mother <- all_mother %>%
mutate(questsum = rowSums(select(., starts_with("q")), na.rm = TRUE),
in_quest = ifelse(questsum != Inf, 1, 0))
all_mother$questsum
all_mother$q1
names(all_mother)[grep("^Q", names(all_mother))]
names(all_mother)[grep("^q", names(all_mother))]
all_mother <- all_mother %>% rowwise() %>% mutate(quest_sum = sum(c(q1, q2, q3, q5yrs, q6, q7yrs, q8yrs, qf)))
all_mother$questsum
